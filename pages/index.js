import React from 'react';
import { useState } from "react";
import Head from "next/head";
import Link from 'next/link'
import { getAllPublished } from "lib/notion";
import { Layout, Menu, theme, Image, List, Button } from "antd";
import { RedoOutlined, FieldTimeOutlined, LoadingOutlined, FormOutlined, UserOutlined, BookOutlined } from '@ant-design/icons';
import useSWR from "swr";
import axios from "axios";
import Date from "compornents/convertdate";

const { Header, Content, Footer, Sider } = Layout;

const fetcher = async (url) => {
  if (!url) return null;
  const response = await axios.get(url);
  if (response.data.type === "external") {
    return response.data.url;
  } else if (response.data.type === "file") {
    return response.data.file.url;
  }
  return null;
};

export const getStaticProps = async () => {
  const data = await getAllPublished();

  return {
    props: {
      posts: data,
    },
    revalidate: 60,
  };
};

export default function Home({ posts }) {
  const [loading, setLoading] = useState(false);
  const { data: imageUrl, error } = useSWR(posts?.thumbnail, fetcher);

  if (!posts) return <h1>No posts</h1>;

  return (
    <>
      <Head>
        <title>Notion Book Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout className='min-h-screen'>
        <Sider
          breakpoint="lg"
          collapsedWidth="0"
          onBreakpoint={(broken) => {
            // console.log(broken);
          }}
          onCollapse={(collapsed, type) => {
            // console.log(collapsed, type);
          }}
        >
          <div className='relative'>
            <Menu
              theme="dark"
              mode="inline"
              defaultSelectedKeys={['2']}
              className=' top-3'
            >
              <Menu.Item key="1" icon={<UserOutlined />}>
                <Link href="/about">ABOUT</Link>
              </Menu.Item>
              <Menu.Item key="2" icon={<BookOutlined />}>
                <Link href="/">BOOK</Link>
              </Menu.Item>
              <Menu.Item key="3" icon={<FormOutlined />}>
                <Link href="/blog">BLOG</Link>
              </Menu.Item>
            </Menu>
          </div>

        </Sider>
        <Layout>
          <Header className=' text-white'>
            <h1>Notion Book Blog</h1>
          </Header>
          <Content className='py-7'>

            <List
              itemLayout="vertical"
              size="large"
              loading={loading}
              pagination={{
                onChange: (page) => {
                  // console.log(page + "ページ目です");
                },
                pageSize: 10,
              }}
              dataSource={posts}
              renderItem={(post, index) => (
                <List.Item key={index}>
                  <div className="flex gap-x-5 gap-y-3 flex-col-reverse sm:flex-row	">
                    <div className="w-[50vw] mx-auto sm:w-[160px]">
                      <Image
                        preview={true}
                        width="100%"
                        height="100%"
                        alt={post.title}
                        src={post.thumbnail}
                        fallback="/noimg.jpg"
                        style={{ objectFit: "cover" }}
                        placeholder={
                          <LoadingOutlined spin />
                        }
                      />
                    </div>
                    <div className="flex-1">
                      <div className="space-y-[0.5rem]">
                        <h2 className="text-xl">
                          <p>{post.title}</p>
                        </h2>
                        <div>
                          <p className="flex items-center space-x-1"><FieldTimeOutlined /><Date convertDate={post.date}></Date></p>
                          <p className="flex items-center space-x-1"><RedoOutlined /><Date convertDate={post.last_edited_time}></Date></p>
                        </div>
                        {post.description && (
                          <p className="whitespace-break-spaces bg-white rounded w-fit p-3">{post.description}</p>
                        )}
                        <Button href={`/posts/${post.slug}`} className="inline-block">More</Button>
                      </div>
                    </div>
                  </div>
                </List.Item>
              )}
            />

          </Content>
          <Footer
            style={{
              textAlign: 'center',
            }}
          >
            Notion Book Blog ©2023 Created by sinpe-pgm
          </Footer>
        </Layout>
      </Layout>

    </ >
  );
}